/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: JointState.h
  Source: JointState.idl
  Cyclone DDS: V0.8.0

*****************************************************************/
#ifndef DDSC_JOINTSTATE_H
#define DDSC_JOINTSTATE_H

#include "Header.h"

#include "dds/ddsc/dds_public_impl.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifndef DDS_SEQUENCE_STRING_DEFINED
#define DDS_SEQUENCE_STRING_DEFINED
typedef struct dds_sequence_string
{
  uint32_t _maximum;
  uint32_t _length;
  char **_buffer;
  bool _release;
} dds_sequence_string;

#define dds_sequence_string__alloc() \
((dds_sequence_string*) dds_alloc (sizeof (dds_sequence_string)));

#define dds_sequence_string_allocbuf(l) \
((char **) dds_alloc ((l) * sizeof (char*)))
#endif /* DDS_SEQUENCE_STRING_DEFINED */

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

#ifndef DDS_SEQUENCE_DOUBLE_DEFINED
#define DDS_SEQUENCE_DOUBLE_DEFINED
typedef struct dds_sequence_double
{
  uint32_t _maximum;
  uint32_t _length;
  double *_buffer;
  bool _release;
} dds_sequence_double;

#define dds_sequence_double__alloc() \
((dds_sequence_double*) dds_alloc (sizeof (dds_sequence_double)));

#define dds_sequence_double_allocbuf(l) \
((double *) dds_alloc ((l) * sizeof (double)))
#endif /* DDS_SEQUENCE_DOUBLE_DEFINED */

typedef struct sensor_msgs_msg_JointState
{
  std_msgs_msg_Header header;
  dds_sequence_string name;
  dds_sequence_double position;
  dds_sequence_double velocity;
  dds_sequence_double effort;
} sensor_msgs_msg_JointState;

extern const dds_topic_descriptor_t sensor_msgs_msg_JointState_desc;

#define sensor_msgs_msg_JointState__alloc() \
((sensor_msgs_msg_JointState*) dds_alloc (sizeof (sensor_msgs_msg_JointState)));

#define sensor_msgs_msg_JointState_free(d,o) \
dds_sample_free ((d), &sensor_msgs_msg_JointState_desc, (o))

#ifdef __cplusplus
}
#endif

#endif /* DDSC_JOINTSTATE_H */
